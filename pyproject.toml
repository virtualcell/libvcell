[build-system]
requires = ["wheel", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "libvcell"
version = "0.0.3"
description = "This is a python package which wraps a subset of VCell Java code as a native python package."
authors = ["Jim Schaff <schaff@uchc.edu>", "Ezequiel Valencia <evalencia@uchc.edu>"]
repository = "https://github.com/virtualcell/libvcell"
documentation = "https://virtualcell.github.io/libvcell/"
readme = "README.md"
packages = [
  {include = "libvcell"}
]
include = [
    {path="libvcell/lib/libvcell*", format="wheel"},
    {path="libvcell/py.typed"}
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
pydantic = "^2.10.6"

[tool.poetry.build]
script = "build.py"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.16.2"
mypy = "^1.5.1"
pre-commit = "^3.8.0"
tox = "^4.11.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.50"
mkdocstrings = {extras = ["python"], version = "^0.27.0"}

[tool.cibuildwheel]
build = "cp311-manylinux_x86_64 cp311-macosx_x86_64 cp311-macosx_arm64 cp311-win_amd64"
skip = "cp36-* cp37-* cp38-* cp310-*"

[tool.setuptools.package-data]
libvcell = ["lib/*"]

[tool.mypy]
files = ["libvcell", "tests"]
exclude = [ "vcell_submodule"]
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
lint.ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # avoid specifiying long messages outside the exception class
    "TRY003",
    #  S602 `subprocess` call with `shell=True` identified, security issue
    "S602",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["libvcell"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
