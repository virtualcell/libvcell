name: release-main

on:
  workflow_dispatch:
  release:
    types: [published]
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        #        python-version: ["3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.11", "3.12"]
        os: [macos-13, windows-latest, ubuntu-latest, macos-14]
        #        os: [ubuntu-latest, macos-14]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v3

      - name: setup graalvm for static native build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "23"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: "native-image"
          native-image-job-reports: "true"
          cache: "maven"

      - name: Install python dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest tests

      - name: Export tag
        id: vars
        run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

      - name: Build and Publish (Windows)
        run: |
          source .venv/Scripts/activate
          poetry version $RELEASE_VERSION
          make build
          for wheel in dist/*.whl; do
            delvewheel repair -w wheelhouse $wheel
          done
          make publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        if: ${{ startsWith(matrix.os, 'windows') }}

      - name: Build and Publish (macOS)
        run: |
          source .venv/bin/activate
          poetry version $RELEASE_VERSION
          make build
          for wheel in dist/*.whl; do
            delocate-wheel -w wheelhouse $wheel
          done
          make publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        if: ${{ startsWith(matrix.os, 'macos') }}

      - name: Build and Publish (Linux)
        run: |
          source .venv/bin/activate
          poetry version $RELEASE_VERSION
          make build
          for wheel in dist/*.whl; do
            auditwheel repair -w wheelhouse $wheel
          done
          make publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        if: ${{ startsWith(matrix.os, 'ubuntu') }}

      - name: Setup tmate
        if: failure()
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

  deploy-docs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v3

      - name: setup graalvm for static native build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "23"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: "native-image"
          native-image-job-reports: "true"
          cache: "maven"

      - name: Install python dependencies
        run: poetry install --no-interaction

      - name: Deploy documentation
        run: poetry run mkdocs gh-deploy --force
