name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 2

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: abatilo/actions-poetry@v3

      - name: setup graalvm for static native build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "23"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"
          cache: "maven"

      - name: Install python dependencies
        run: poetry install --no-interaction

      - name: Run checks
        run: make check

  tests-and-type-check:
    strategy:
      matrix: #        python-version: ["3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.11"]
        os: [macos-13, windows-latest, ubuntu-22.04, macos-14]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 2

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v3

      - name: setup graalvm for static native build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "23"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"
          cache: "maven"

      - name: Install python dependencies
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest tests --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Check typing
        run: poetry run mypy

      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.11
        uses: codecov/codecov-action@v4
        if: ${{ matrix.python-version == '3.11' }}

      - name: Setup tmate
        if: failure()
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 2

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: abatilo/actions-poetry@v3

      - name: setup graalvm for static native build
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "23"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: "true"
          cache: "maven"

      - name: Install python dependencies
        run: poetry install --no-interaction

      - name: Check if documentation can be built
        run: poetry run mkdocs build -s
